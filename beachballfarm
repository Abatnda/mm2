if game.PlaceId == 142823291 then
  -- [ Services ] --
  local Players = game:GetService('Players')
  local CoreGUI = game:GetService('CoreGui')
  local TweenService = game:GetService('TweenService')
  local UserInputService = game:GetService("UserInputService")
  local LocalPlayer = Players.LocalPlayer
  local tweenInfo = TweenInfo.new(2.9, Enum.EasingStyle.Linear)

  getgenv().coinFarm = false

  -- [ GUI ] --
  local ScreenGui = Instance.new('ScreenGui')
  local MainFrame = Instance.new('Frame')
  local HeaderFrame = Instance.new('Frame')
  local Description = Instance.new('TextLabel')
  local GameName = Instance.new('TextLabel')
  local MainButton = Instance.new('TextButton')

  -- [ Functions ] --
  local function MakeDraggable(gui)
    local dragging, dragInput, dragStart, startPos
    local function update(input)
      local delta = input.Position - dragStart
      gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    gui.InputBegan:Connect(function(input)
      if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = gui.Position

        input.Changed:Connect(function()
          if input.UserInputState == Enum.UserInputState.End then
            dragging = false
          end
        end)
      end
    end)
    gui.InputChanged:Connect(function(input)
      if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
      end
    end)
    UserInputService.InputChanged:Connect(function(input)
      if input == dragInput and dragging then
        update(input)
      end
    end)
  end

  local function tweenToPart(part)
    local char = LocalPlayer.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if hrp and part and part:IsDescendantOf(game) and part.Parent then
      if part.Position.Y > 0 then -- проверка по высоте
        local success, err = pcall(function()
          local tween = TweenService:Create(hrp, tweenInfo, {CFrame = part.CFrame})
          tween:Play()
          tween.Completed:Wait()
        end)
        if not success then
          warn("Tween error:", err)
        end
      else
        warn("Монета слишком низко, пропускаем.")
      end
    else
      warn("Монета недоступна или объект отсутствует.")
    end
  end

  local function getDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
  end

  local function findNearestCoin()
    local char = LocalPlayer.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end

    local nearestCoin = nil
    local nearestDist = math.huge
    local hrpPos = hrp.Position

    for _, descendant in pairs(workspace:GetDescendants()) do
      if descendant:IsA("BasePart") and descendant.Name == "Coin_Server" and descendant.Parent then
        if descendant.Position.Y > 0 then
          local dist = getDistance(hrpPos, descendant.Position)
          if dist < nearestDist then
            nearestDist = dist
            nearestCoin = descendant
          end
        end
      end
    end

    return nearestCoin
  end

  local function coinFarm()
    while getgenv().coinFarm do
      local coin = findNearestCoin()
      if coin then
        tweenToPart(coin)
        task.wait(0.1)
      else
        task.wait(0.5)
      end
    end
  end

  -- [ GUI setup ] --
  ScreenGui.Name = 'QuantumixHUB'
  ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
  ScreenGui.Parent = CoreGUI

  local FrameCorner = Instance.new('UICorner')
  MainFrame.Name = 'MainFrame'
  MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
  MainFrame.BorderSizePixel = 0
  MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
  MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
  MainFrame.Size = UDim2.new(0, 250, 0, 150)
  MainFrame.Parent = ScreenGui
  MakeDraggable(MainFrame)
  FrameCorner.Parent = MainFrame
  FrameCorner.CornerRadius = UDim.new(0, 10)

  local HeaderCorner = Instance.new('UICorner')
  HeaderFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
  HeaderFrame.BorderSizePixel = 0
  HeaderFrame.Size = UDim2.new(1, 0, 0, 25)
  HeaderFrame.Parent = MainFrame
  HeaderCorner.Parent = HeaderFrame
  HeaderCorner.CornerRadius = UDim.new(0, 10)

  Description.BackgroundTransparency = 1
  Description.Text = "MM2 COINFARM (QX)"
  Description.Size = UDim2.new(1, -4, 0, 20)
  Description.Position = UDim2.new(0, 4, 0, 55)
  Description.TextSize = 20
  Description.TextColor3 = Color3.fromRGB(255, 255, 255)
  Description.TextXAlignment = Enum.TextXAlignment.Center
  Description.Font = Enum.Font.Gotham
  Description.Parent = MainFrame

  GameName.BackgroundTransparency = 1
  GameName.Text = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
  GameName.Size = UDim2.new(1, -4, 0, 15)
  GameName.Position = UDim2.new(0, 4, 0, 75)
  GameName.TextSize = 10
  GameName.TextColor3 = Color3.fromRGB(100, 100, 255)
  GameName.TextXAlignment = Enum.TextXAlignment.Center
  GameName.Font = Enum.Font.Gotham
  GameName.Parent = MainFrame

  local ButtonCorner = Instance.new('UICorner')
  MainButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
  MainButton.BorderSizePixel = 0
  MainButton.Text = "Working: OFF"
  MainButton.TextColor3 = Color3.fromRGB(255, 100, 100)
  MainButton.TextSize = 14
  MainButton.Font = Enum.Font.Gotham
  MainButton.Size = UDim2.new(1, -20, 0, 30)
  MainButton.Position = UDim2.new(0, 10, 0, 110)
  MainButton.Parent = MainFrame
  ButtonCorner.Parent = MainButton
  ButtonCorner.CornerRadius = UDim.new(0, 10)

  local toggle = false

  MainButton.MouseButton1Click:Connect(function()
    toggle = not toggle
    if toggle then
      getgenv().coinFarm = true
      MainButton.Text = "Working: ON"
      MainButton.TextColor3 = Color3.fromRGB(100, 255, 100)
      task.spawn(coinFarm)
    else
      getgenv().coinFarm = false
      MainButton.Text = "Working: OFF"
      MainButton.TextColor3 = Color3.fromRGB(255, 100, 100)
    end
  end)
end
