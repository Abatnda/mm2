if game.PlaceId == 142823291 then
    local Players = game:GetService('Players')
    local CoreGUI = game:GetService('CoreGui')
    local TweenService = game:GetService('TweenService')
    local UserInputService = game:GetService("UserInputService")

    local plr = Players.LocalPlayer
    local character = plr.Character or plr.CharacterAdded:Wait()
    local humPart = character:WaitForChild("HumanoidRootPart")

    local function getMap()
        for _, m in ipairs(game.Workspace:GetDescendants()) do
            if m:IsA("Model") and m.Name == "CoinContainer" then
                return m
            end
        end
        return nil
    end

    local function MakeDraggable(gui)
        local dragging, dragInput, dragStart, startPos
        local function update(input)
            local delta = input.Position - dragStart
            gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
        gui.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = gui.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then dragging = false end
                end)
            end
        end)
        gui.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                dragInput = input
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then update(input) end
        end)
    end

    local ScreenGui = Instance.new("ScreenGui", CoreGUI)
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Name = "BeachBallFarm"

    local Frame = Instance.new("Frame", ScreenGui)
    Frame.Size = UDim2.new(0, 200, 0, 120)
    Frame.Position = UDim2.new(0.5, -100, 0.5, -60)
    Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    Frame.BorderSizePixel = 0
    MakeDraggable(Frame)
    Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 10)

    local Title = Instance.new("TextLabel", Frame)
    Title.Text = "MM2 BeachBall Farm"
    Title.Size = UDim2.new(1, 0, 0, 30)
    Title.BackgroundTransparency = 1
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Font = Enum.Font.Gotham
    Title.TextSize = 16

    local Toggle = Instance.new("TextButton", Frame)
    Toggle.Size = UDim2.new(1, -20, 0, 35)
    Toggle.Position = UDim2.new(0, 10, 0, 60)
    Toggle.Text = "Working: OFF"
    Toggle.Font = Enum.Font.Gotham
    Toggle.TextSize = 14
    Toggle.TextColor3 = Color3.fromRGB(255, 100, 100)
    Toggle.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Instance.new("UICorner", Toggle).CornerRadius = UDim.new(0, 8)

    local farming = false
    local delay = 1.2

    local function StartFarm()
        while farming do
            local map = getMap()
            if map then
                local coins = {}
                for _, coin in ipairs(map:GetChildren()) do
                    if coin:IsA("Part") and coin.Name == "Coin_Server" and coin:GetAttribute("CoinID") == "BeachBall" then
                        local cv = coin:FindFirstChild("CoinVisual")
                        if cv and cv.Transparency ~= 1 then
                            table.insert(coins, coin)
                        end
                    end
                end

                table.sort(coins, function(a, b)
                    return (humPart.Position - a.Position).Magnitude < (humPart.Position - b.Position).Magnitude
                end)

                for _, coin in ipairs(coins) do
                    if not farming then break end
                    if not humPart or not humPart.Parent then
                        character = plr.Character or plr.CharacterAdded:Wait()
                        humPart = character:WaitForChild("HumanoidRootPart")
                    end
                    for _, p in pairs(character:GetChildren()) do
                        if p:IsA("BasePart") and p.CanCollide then
                            p.CanCollide = false
                        end
                    end
                    local goal = {CFrame = coin.CFrame * CFrame.new(0, 5, 0)}
                    local dist = (humPart.Position - coin.Position).Magnitude
                    local tweenTime = math.clamp(dist / 55, 0.2, 1.2)
                    local tween = TweenService:Create(humPart, TweenInfo.new(tweenTime, Enum.EasingStyle.Linear), goal)
                    tween:Play()
                    tween.Completed:Wait()
                    task.wait(delay)
                end
            end
            task.wait(0.25)
        end
    end

    Toggle.MouseButton1Click:Connect(function()
        farming = not farming
        if farming then
            Toggle.Text = "Working: ON"
            Toggle.TextColor3 = Color3.fromRGB(100, 255, 100)
            task.spawn(StartFarm)
        else
            Toggle.Text = "Working: OFF"
            Toggle.TextColor3 = Color3.fromRGB(255, 100, 100)
        end
    end)

    -- Anti-AFK
    local GC = getconnections or get_signal_cons
    if GC then
        for _,v in pairs(GC(plr.Idled)) do
            if v.Disable then v:Disable() elseif v.Disconnect then v:Disconnect() end
        end
    else
        local vu = cloneref(game:GetService("VirtualUser"))
        plr.Idled:Connect(function()
            vu:CaptureController()
            vu:ClickButton2(Vector2.new())
        end)
    end
end
